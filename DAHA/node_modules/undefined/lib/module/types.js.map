{"version":3,"names":[],"sources":["types.ts"],"sourcesContent":["// Type definitions for @react-native-google-signin/google-signin 6.0\n// Project: https://github.com/react-native-community/google-signin\n// Definitions by: Jacob Froman <https://github.com/j-fro>\n//                 Michele Bombardi <https://github.com/bm-software>\n//                 Christian Chown <https://github.com/christianchown>\n//                 Eric Chen <https://github.com/echentw>\n\nexport interface RNGoogleSignType {\n  BUTTON_SIZE_STANDARD: 0;\n  BUTTON_SIZE_WIDE: 1;\n  BUTTON_SIZE_ICON: 2;\n  BUTTON_COLOR_DARK: 0;\n  BUTTON_COLOR_LIGHT: 1;\n}\n\nexport interface HasPlayServicesParams {\n  /**\n   * When showPlayServicesUpdateDialog is true, the user will be prompted to\n   * install Play Services if on Android and they are not installed.\n   * Default is true\n   */\n  showPlayServicesUpdateDialog?: boolean;\n}\n\nexport interface SignInParams {\n  /**\n   * iOS ONLY. The user's ID, or email address, to be prefilled in the authentication UI if possible.\n   * https://developers.google.com/identity/sign-in/ios/api/interface_g_i_d_sign_in.html#a0a68c7504c31ab0b728432565f6e33fd\n   */\n  loginHint?: string;\n}\n\nexport interface AddScopesParams {\n  /**\n   * The Google API scopes to request access to. Default is email and profile.\n   */\n  scopes?: string[];\n}\n\nexport interface ConfigureParams {\n  /**\n   * ANDROID ONLY. Use AddScopes() on iOS\n   * The Google API scopes to request access to. Default is email and profile.\n   */\n  scopes?: string[];\n  /**\n   * Web client ID from Developer Console. Required for offline access\n   */\n  webClientId?: string;\n\n  /**\n   * If you want to specify the client ID of type iOS\n   */\n  iosClientId?: string;\n\n  /**\n   * If you want to specify a different bundle path name for the GoogleService-Info, e.g. GoogleService-Info-Staging\n   */\n  googleServicePlistPath?: string;\n\n  /**\n   * Must be true if you wish to access user APIs on behalf of the user from\n   * your own server\n   */\n  offlineAccess?: boolean;\n\n  /**\n   * Specifies a hosted domain restriction\n   */\n  hostedDomain?: string;\n\n  /**\n   * ANDROID ONLY. If true, the granted server auth code can be exchanged for an access token and a refresh token.\n   */\n  forceCodeForRefreshToken?: boolean;\n\n  /**\n   * ANDROID ONLY. An account name that should be prioritized.\n   */\n  accountName?: string;\n\n  /**\n   * iOS ONLY\n   * The OpenID2 realm of the home web server. This allows Google to include the user's OpenID\n   * Identifier in the OpenID Connect ID token.\n   */\n  openIdRealm?: string;\n  /**\n   * iOS ONLY The desired height (and width) of the profile image. Defaults to 120px\n   */\n  profileImageSize?: number;\n}\n\nexport interface User {\n  user: {\n    id: string;\n    name: string | null;\n    email: string;\n    photo: string | null;\n    familyName: string | null;\n    givenName: string | null;\n  };\n  scopes?: string[];\n  idToken: string | null;\n  /**\n   * Not null only if a valid webClientId and offlineAccess: true was\n   * specified in configure().\n   */\n  serverAuthCode: string | null;\n}\n\nexport interface NativeModuleError extends Error {\n  code: string;\n}\n"],"mappings":""}